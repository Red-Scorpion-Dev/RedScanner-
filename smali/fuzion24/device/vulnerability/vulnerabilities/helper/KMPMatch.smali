.class public Lfuzion24/device/vulnerability/vulnerabilities/helper/KMPMatch;
.super Ljava/lang/Object;
.source "KMPMatch.java"


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 5
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private computeFailure([B)[I
    .locals 5
    .param p1, "pattern"    # [B

    .prologue
    .line 32
    array-length v3, p1

    new-array v0, v3, [I

    .line 34
    .local v0, "failure":[I
    const/4 v2, 0x0

    .line 35
    .local v2, "j":I
    const/4 v1, 0x1

    .local v1, "i":I
    :goto_0
    array-length v3, p1

    if-ge v1, v3, :cond_2

    .line 36
    :goto_1
    if-lez v2, :cond_0

    aget-byte v3, p1, v2

    aget-byte v4, p1, v1

    if-eq v3, v4, :cond_0

    .line 37
    add-int/lit8 v3, v2, -0x1

    aget v2, v0, v3

    goto :goto_1

    .line 39
    :cond_0
    aget-byte v3, p1, v2

    aget-byte v4, p1, v1

    if-ne v3, v4, :cond_1

    .line 40
    add-int/lit8 v2, v2, 0x1

    .line 42
    :cond_1
    aput v2, v0, v1

    .line 35
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 45
    :cond_2
    return-object v0
.end method


# virtual methods
.method public indexOf([B[B)I
    .locals 6
    .param p1, "data"    # [B
    .param p2, "pattern"    # [B

    .prologue
    const/4 v3, -0x1

    .line 10
    invoke-direct {p0, p2}, Lfuzion24/device/vulnerability/vulnerabilities/helper/KMPMatch;->computeFailure([B)[I

    move-result-object v0

    .line 12
    .local v0, "failure":[I
    const/4 v2, 0x0

    .line 13
    .local v2, "j":I
    array-length v4, p1

    if-nez v4, :cond_1

    .line 24
    :cond_0
    :goto_0
    return v3

    .line 15
    :cond_1
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1
    array-length v4, p1

    if-ge v1, v4, :cond_0

    .line 16
    :goto_2
    if-lez v2, :cond_2

    aget-byte v4, p2, v2

    aget-byte v5, p1, v1

    if-eq v4, v5, :cond_2

    .line 17
    add-int/lit8 v4, v2, -0x1

    aget v2, v0, v4

    goto :goto_2

    .line 19
    :cond_2
    aget-byte v4, p2, v2

    aget-byte v5, p1, v1

    if-ne v4, v5, :cond_3

    add-int/lit8 v2, v2, 0x1

    .line 20
    :cond_3
    array-length v4, p2

    if-ne v2, v4, :cond_4

    .line 21
    array-length v3, p2

    sub-int v3, v1, v3

    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 15
    :cond_4
    add-int/lit8 v1, v1, 0x1

    goto :goto_1
.end method
